# ===============================
# = DATA SOURCE H2
# ===============================
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:file:C:/glandata-api/banco_dados
spring.datasource.url=jdbc:h2:mem:glandata-api;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE SCHEMA auditoria\\;
spring.datasource.username=sa
spring.datasource.password=
# jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create

# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url=jdbc:postgresql://localhost:5432/projeto-web
#spring.datasource.username=root
#spring.datasource.password=123456
#spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#Insere os dados conforme arquivo data.sql ao subir o projeto
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# ===============================
# = JWT
# ===============================
glandata-api.jwt.expiration = 86400000
glandata-api.jwt.secret = palavrachaveaquiporsercriptografada-aceitaqualquercaracterespecial

# ===============================
# = INFO APPLICATION
# ===============================
info.app.name=@project.name@
info.app.version=.1.0.2
info.app.description=API Rest com Spring Boot desenvolvida pela segunda turma do treinamento de Java Web da equipe Glan Data

# ===============================
# = SPRING APPLICATION
# ===============================
spring.boot.admin.client.url=http://localhost:8081
spring.application.name=glandata-api
server.port=8080
spring.jpa.open-in-view = false
# ===============================
# = ACTUATOR
# ===============================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# ===============================
# = OPEN API V3 (SWAGGER)
# ===============================
springdoc.show-actuator=false
springdoc.swagger-ui.path=/docs
#Oculta os Modelos/Schemas  (-1 oculta, 0 exibe com menu fechado, 1 exibe com menu aberto)
springdoc.swagger-ui.defaultModelsExpandDepth=-1
springdoc.api-docs.enabled= true
springdoc.swagger-ui.tags-sorter= alpha
springdoc.writer-with-order-by-keys= false


# ===============================
# = AUDITORIA / REVISIONS
# ===============================
# Gera as tabelas de auditorias das entidades no schema informado  ::: default schema raiz
spring.jpa.properties.org.hibernate.envers.default_schema=auditoria

# Altera o prefixo das tabelas de auditoria que serão geradas ::: Default vazio
#spring.jpa.properties.org.hibernate.envers.audit_table_prefix = AUDIT_

# Altera o sufixo das tabelas de auditoria que serão geradas ::: Default _AUD
#spring.jpa.properties.org.hibernate.envers.audit_table_suffix =_AUDIT

# Salva o estado dos dados (entidade) antes de deletar
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true

# Renomeia a coluna que exibe o numero revisão
spring.jpa.properties.org.hibernate.envers.revision_field_name=revisao

# Renomeia a coluna que armazena o tipo de revisão
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=tipo

